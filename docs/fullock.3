.TH fullock "3" "May 2015" "fullock" "FULLOCK"
.SH NAME
fullock \- Fast User Level LOCK library provided by Yahoo! JAPAN
.SH SYNOPSIS
.TP
\fBlibfullock.so
.SH DESCRIPTION
.TP 2
FULLOCK is fast locking library on user level provided by Yahoo! JAPAN. FULLOCK is following specifications.
.PP
Supports multi-threading.
.PP
Supports multi-processing.
.PP
Automatically unlock when the process is terminated while holding the lock.
.PP
Automatically unlock when the thread is terminated while holding the lock.
.PP
Automatically unlock when the file handle is closed while holding the lock.
.PP
Not dead lock by same thread locking.
.PP
Provide programming interface like posix mutex and rwlock.
.PP
.SH FUNCTIONS
.TP 2
FULLOCK provides following programming interface.
.PP
void fullock_print_version(...)
.PP
bool fullock_set_no_robust(...)
.PP
bool fullock_set_low_robust(...)
.PP
bool fullock_set_high_robust(...)
.PP
bool fullock_set_noretry_allow_nomap(...)
.PP
bool fullock_set_noretry_deny_nomap(...)
.PP
bool fullock_set_retry_allow_nomap(...)
.PP
bool fullock_set_retry_deny_nomap(...)
.PP
bool fullock_set_no_freeunit(...)
.PP
bool fullock_set_fd_freeunit(...)
.PP
bool fullock_set_offset_freeunit(...)
.PP
bool fullock_set_robust_check_count(...)
.PP
bool fullock_reinitialize(...)
.PP
bool fullock_reinitialize_ex(...)
.PP
int fullock_mutex_lock(...)
.PP
int fullock_mutex_trylock(...)
.PP
int fullock_mutex_timedlock(...)
.PP
int fullock_mutex_unlock(...)
.PP
int fullock_rwlock_rdlock(...)
.PP
int fullock_rwlock_tryrdlock(...)
.PP
int fullock_rwlock_timedrdlock(...)
.PP
int fullock_rwlock_wrlock(...)
.PP
int fullock_rwlock_trywrlock(...)
.PP
int fullock_rwlock_timedwrlock(...)
.PP
int fullock_rwlock_unrwlock(...)
.PP
bool fullock_rwlock_islocked(...)
.PP
int fullock_cond_timedwait(...)
.PP
int fullock_cond_wait(...)
.PP
int fullock_cond_signal(...)
.PP
int fullock_cond_broadcast(...)
.PP
.SH ENVIRONMENT
.TP 2
fullock use some environments automatically, plese take care these environments.
.IP FLCKDBGMODE 20
specifies debugging level: INFO/WAN/ERR/SILENT
.IP FLCKDBGFILE 20
output file path for message(default: stderr)
.IP FLCKAUTOINIT 20
specify YES/NO, if this environment has YES, fullock does not initialize shared memory file. This environment is for debugging.
.IP FLCKROBUSTMODE 20
specify NO/LOW/HIGH for robust mode.
.IP FLCKNOMAPMODE 20
specify ALLOW(ALLOW_NORETRY) / DENY(DENY_NORETRY) / ALLOW_RETRY / DENY_RETRY for fault tolerant.
This value determines the behavior of the case can not be mapped.
.IP FLCKFREEUNITMODE 20
spacify NO/FD/OFFSET/ALWAYS, it specifies the open method of unit management area to be used in the reader/writer lock.
.IP FLCKROBUSTCHKCNT 20
If fullock is operating in a high robust mode, this value sets the processing frequency for the deadlock detection.
.IP FLCKUMASK 20
specify umask for the shared memory file which is made by fullock.
.IP FLCKDIRPATH 20
specify directory path for the shared memory file which is made by fullock.
.IP FLCKFILENAME 20
specify the shared memory file name which is made by fullock.
.IP FLCKFILECNT 20
specify file count for the reader/writer lock.
.IP FLCKOFFETCNT 20
specify offset count for the reader/writer lock.
.IP FLCKLOCKERCNT 20
specify the process(thread) count for the reader/writer lock and mutex at same time.
.IP FLCKNMTXCNT 20
specify count for named mutex.
.IP FLCKNCONDCNT 20
specify count for named condition variable.
.IP FLCKWAITERCNT 20
specify named condition waiter count for named condition variable.
.SH NOTES
.TP
FULLOCK is fast locking library on user level provided by Yahoo! JAPAN.
.SH SEE ALSO
.TP
fullock(1)
.SH BUGS
.TP
Please report owner and comitter.
.SH AUTHOR
fullock has been written by Takeshi Nakatani <ggtakec@gmail.com>.
